**AbortController** — это встроенный в JavaScript объект, который позволяет отменить выполнение асинхронных операций, таких как запросы XHR (XMLHttpRequest) или Fetch.

**Как работает AbortController:**

1. Создаётся экземпляр объекта AbortController.
2. У экземпляра есть метод signal, который возвращает объект AbortSignal.
3. Объект AbortSignal передаётся функциям, которые выполняют асинхронные операции.
4. Когда нужно отменить операцию, вызывается метод abort у экземпляра AbortController. Это посылает сигнал объекту AbortSignal, и все функции, которые его получили, прерывают свою работу.

**Кейсы применения AbortController:**

* **Загрузка файлов.** Если пользователь загружает большой файл, можно использовать AbortController, чтобы прервать загрузку, если она больше не нужна.
* **AJAX-запросы.** Если вы делаете AJAX-запрос, который может занять много времени, вы можете использовать AbortController, чтобы отменить запрос, если он больше не нужен.
* **Веб-сокеты.** Если вы используете веб-сокеты для обмена данными между клиентом и сервером, вы можете использовать AbortController, чтобы закрыть соединение, если оно больше не нужно.

Пример использования AbortController:
```
// Создаём экземпляр AbortController
const controller = new AbortController();

// Получаем объект AbortSignal
const signal = controller.signal;

// Передаём объект AbortSignal функции, которая выполняет асинхронную операцию
fetch('https://example.com', { signal })
  .then(response => response.text())
  .then(data => {
    // Здесь мы можем обработать полученные данные
  });

// Чтобы отменить операцию, вызываем метод abort
controller.abort();
```